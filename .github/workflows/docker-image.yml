name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get commit SHA and tag (if exists)
        id: get_info
        run: |
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=tag::$(git describe --tags --exact-match 2>/dev/null || echo '')"
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            antlar/nginx-opentelemetry:${{ steps.get_info.outputs.short_sha }}
            ${{ steps.get_info.outputs.tag != '' && format('antlar/nginx-opentelemetry:{0}', steps.get_info.outputs.tag) || '' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Retag Docker image on release
        if: github.event_name == 'release'
        run: |
          docker pull antlar/nginx-opentelemetry:${{ steps.get_info.outputs.short_sha }}
          docker tag antlar/nginx-opentelemetry:${{ steps.get_info.outputs.short_sha }} antlar/nginx-opentelemetry:${{ github.event.release.tag_name }}
          docker push antlar/nginx-opentelemetry:${{ github.event.release.tag_name }}
